//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sparticle.SAL.Example.ServiceCollectionReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceAddressRequest", Namespace="http://schemas.datacontract.org/2004/07/Sparticle.ServiceCollection.Interface")]
    [System.SerializableAttribute()]
    public partial class ServiceAddressRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Sparticle.SAL.Example.ServiceCollectionReference.ServiceAddressRequest.MatchMode MModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceIdentityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ip {
            get {
                return this.IpField;
            }
            set {
                if ((object.ReferenceEquals(this.IpField, value) != true)) {
                    this.IpField = value;
                    this.RaisePropertyChanged("Ip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Sparticle.SAL.Example.ServiceCollectionReference.ServiceAddressRequest.MatchMode MMode {
            get {
                return this.MModeField;
            }
            set {
                if ((this.MModeField.Equals(value) != true)) {
                    this.MModeField = value;
                    this.RaisePropertyChanged("MMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string No {
            get {
                return this.NoField;
            }
            set {
                if ((object.ReferenceEquals(this.NoField, value) != true)) {
                    this.NoField = value;
                    this.RaisePropertyChanged("No");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceGroup {
            get {
                return this.ServiceGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceGroupField, value) != true)) {
                    this.ServiceGroupField = value;
                    this.RaisePropertyChanged("ServiceGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceIdentity {
            get {
                return this.ServiceIdentityField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceIdentityField, value) != true)) {
                    this.ServiceIdentityField = value;
                    this.RaisePropertyChanged("ServiceIdentity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="ServiceAddressRequest.MatchMode", Namespace="http://schemas.datacontract.org/2004/07/Sparticle.ServiceCollection.Interface")]
        public enum MatchMode : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Ip = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            No = 2,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceAddressResponse", Namespace="http://schemas.datacontract.org/2004/07/Sparticle.ServiceCollection.Interface")]
    [System.SerializableAttribute()]
    public partial class ServiceAddressResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, string> PropertyListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceIdentityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> PropertyList {
            get {
                return this.PropertyListField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyListField, value) != true)) {
                    this.PropertyListField = value;
                    this.RaisePropertyChanged("PropertyList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceIdentity {
            get {
                return this.ServiceIdentityField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceIdentityField, value) != true)) {
                    this.ServiceIdentityField = value;
                    this.RaisePropertyChanged("ServiceIdentity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceCollectionReference.IServiceCollection")]
    public interface IServiceCollection {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCollection/GetServiceAddress", ReplyAction="http://tempuri.org/IServiceCollection/GetServiceAddressResponse")]
        Sparticle.SAL.Example.ServiceCollectionReference.ServiceAddressResponse GetServiceAddress(Sparticle.SAL.Example.ServiceCollectionReference.ServiceAddressRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCollection/GetServiceAddress", ReplyAction="http://tempuri.org/IServiceCollection/GetServiceAddressResponse")]
        System.Threading.Tasks.Task<Sparticle.SAL.Example.ServiceCollectionReference.ServiceAddressResponse> GetServiceAddressAsync(Sparticle.SAL.Example.ServiceCollectionReference.ServiceAddressRequest request);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceCollection/Reload")]
        void Reload();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceCollection/Reload")]
        System.Threading.Tasks.Task ReloadAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceCollectionChannel : Sparticle.SAL.Example.ServiceCollectionReference.IServiceCollection, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceCollectionClient : System.ServiceModel.ClientBase<Sparticle.SAL.Example.ServiceCollectionReference.IServiceCollection>, Sparticle.SAL.Example.ServiceCollectionReference.IServiceCollection {
        
        public ServiceCollectionClient() {
        }
        
        public ServiceCollectionClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceCollectionClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceCollectionClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceCollectionClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Sparticle.SAL.Example.ServiceCollectionReference.ServiceAddressResponse GetServiceAddress(Sparticle.SAL.Example.ServiceCollectionReference.ServiceAddressRequest request) {
            return base.Channel.GetServiceAddress(request);
        }
        
        public System.Threading.Tasks.Task<Sparticle.SAL.Example.ServiceCollectionReference.ServiceAddressResponse> GetServiceAddressAsync(Sparticle.SAL.Example.ServiceCollectionReference.ServiceAddressRequest request) {
            return base.Channel.GetServiceAddressAsync(request);
        }
        
        public void Reload() {
            base.Channel.Reload();
        }
        
        public System.Threading.Tasks.Task ReloadAsync() {
            return base.Channel.ReloadAsync();
        }
    }
}
